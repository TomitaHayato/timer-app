// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


// Migration
model User {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  email     String    @unique
  name      String
  hashedPassword String
  todos     Todo[]
  setting   Setting?
  records   Record[]
  authRefreshToken AuthRefreshToken?
}

model Todo {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  title       String
  isCompleted Boolean   @default(false)
  deadline    DateTime?
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model Setting {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  volume      Int       @default(50)
  isMuted     Boolean   @default(false)
  workSec     Int       @default(1500)
  restSec     Int       @default(300)
  longRestSec Int       @default(900)
  workingSound String?
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String    @unique
}

model Record {
  id  String  @id       @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  workTime    Int       @default(0)
  workCount   Int       @default(0)
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
}

model AuthRefreshToken {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  token     String   @unique
  expiresAt DateTime
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
